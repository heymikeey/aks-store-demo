piVersion: v1
kind: Namespace
metadata:
  name: pets-dev
---
apiVersion: v1
data:
  rabbitmq_enabled_plugins: |
    [rabbitmq_management,rabbitmq_prometheus,rabbitmq_amqp1_0].
kind: ConfigMap
metadata:
  name: rabbitmq-enabled-plugins
  namespace: pets-dev
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: pets-dev
spec:
  ports:
  - port: 27017
  selector:
    app: mongodb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: pets-dev
spec:
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app: order-service
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: pets-dev
spec:
  ports:
  - name: http
    port: 3002
    targetPort: 3002
  selector:
    app: product-service
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: pets-dev
spec:
  ports:
  - name: rabbitmq-amqp
    port: 5672
    targetPort: 5672
  - name: rabbitmq-http
    port: 15672
    targetPort: 15672
  selector:
    app: rabbitmq
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: store-front
  namespace: pets-dev
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: store-front
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: pets-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - env:
        - name: ORDER_QUEUE_HOSTNAME
          value: rabbitmq
        - name: ORDER_QUEUE_PORT
          value: "5672"
        - name: ORDER_QUEUE_USERNAME
          value: username
        - name: ORDER_QUEUE_PASSWORD
          value: password
        - name: ORDER_QUEUE_NAME
          value: orders
        - name: FASTIFY_ADDRESS
          value: 0.0.0.0
        image: ghcr.io/azure-samples/aks-store-demo/order-service:latest
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 3
          periodSeconds: 3
        name: order-service
        ports:
        - containerPort: 3000
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 3
          periodSeconds: 5
        resources:
          limits:
            cpu: 75m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 50Mi
        startupProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 20
          periodSeconds: 10
      initContainers:
      - command:
        - sh
        - -c
        - until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;
        image: busybox
        name: wait-for-rabbitmq
        resources:
          limits:
            cpu: 75m
            memory: 128Mi
          requests:
            cpu: 1m
            memory: 50Mi
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  namespace: pets-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
      - env:
        - name: AI_SERVICE_URL
          value: http://ai-service:5001/
        image: ghcr.io/azure-samples/aks-store-demo/product-service:latest
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 3
          periodSeconds: 3
        name: product-service
        ports:
        - containerPort: 3002
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 3
          periodSeconds: 5
        resources:
          limits:
            cpu: 2m
            memory: 10Mi
          requests:
            cpu: 1m
            memory: 1Mi
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-front
  namespace: pets-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store-front
  template:
    metadata:
      labels:
        app: store-front
    spec:
      containers:
      - env:
        - name: VUE_APP_ORDER_SERVICE_URL
          value: http://order-service:3000/
        - name: VUE_APP_PRODUCT_SERVICE_URL
          value: http://product-service:3002/
        image: ghcr.io/azure-samples/aks-store-demo/store-front:latest
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        name: store-front
        ports:
        - containerPort: 8080
          name: store-front
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 1m
            memory: 200Mi
        startupProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: pets-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  serviceName: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mcr.microsoft.com/mirror/docker/library/mongo:4.2
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - db.runCommand('ping').ok
          initialDelaySeconds: 5
          periodSeconds: 5
        name: mongodb
        ports:
        - containerPort: 27017
          name: mongodb
        resources:
          limits:
            cpu: 25m
            memory: 1024Mi
          requests:
            cpu: 5m
            memory: 75Mi
      nodeSelector:
        kubernetes.io/os: linux
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: pets-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  serviceName: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - env:
        - name: RABBITMQ_DEFAULT_USER
          value: username
        - name: RABBITMQ_DEFAULT_PASS
          value: password
        image: mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine
        name: rabbitmq
        ports:
        - containerPort: 5672
          name: rabbitmq-amqp
        - containerPort: 15672
          name: rabbitmq-http
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/rabbitmq/enabled_plugins
          name: rabbitmq-enabled-plugins
          subPath: enabled_plugins
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          items:
          - key: rabbitmq_enabled_plugins
            path: enabled_plugins
          name: rabbitmq-enabled-plugins
        name: rabbitmq-enabled-plugins